# Generated by Django 4.0.4 on 2022-06-04 18:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import inventory.models
import rules.contrib.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=inventory.models.location_image_upload_handler, verbose_name='Image')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('status', models.PositiveSmallIntegerField(choices=[(10, 'Alert'), (20, 'Warning'), (30, 'Normal')], default=30, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('maintenance_group', models.ForeignKey(blank=True, help_text='Group members can view this location.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_maintenance_group', to='auth.group', verbose_name='Maintenance group')),
                ('management_group', models.ForeignKey(blank=True, help_text='Group members can view, change or delete this location.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_management_group', to='auth.group', verbose_name='Management group')),
                ('owner', models.ForeignKey(help_text='Owner can view, change or delete this location.', on_delete=django.db.models.deletion.CASCADE, related_name='location_owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['status', 'name'],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=inventory.models.object_image_upload_handler, verbose_name='Image')),
                ('status', models.PositiveSmallIntegerField(choices=[(10, 'Alert'), (20, 'Warning'), (30, 'Normal')], default=30, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_location', to='inventory.location', verbose_name='Location')),
                ('maintenance_group', models.ForeignKey(blank=True, help_text='Group members can view this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_maintenance_group', to='auth.group', verbose_name='Maintenance group')),
                ('management_group', models.ForeignKey(blank=True, help_text='Group members can view or update this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_management_group', to='auth.group', verbose_name='Management group')),
                ('owner', models.ForeignKey(help_text='Owner can view, change or delete this object.', on_delete=django.db.models.deletion.CASCADE, related_name='object_owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Object',
                'verbose_name_plural': 'Objects',
                'ordering': ['status', 'name'],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=inventory.models.object_image_upload_handler, verbose_name='Image')),
                ('status', models.PositiveSmallIntegerField(choices=[(10, 'Alert'), (20, 'Warning'), (30, 'Normal')], default=30, verbose_name='Status')),
                ('webhook_authorization', models.CharField(blank=True, max_length=255, verbose_name='Webhook authorization')),
                ('webhook_payload', models.JSONField(blank=True, null=True, verbose_name='Webhook payload')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensor_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_object', to='inventory.object', verbose_name='Object')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensor_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Sensor',
                'verbose_name_plural': 'Sensors',
                'ordering': ['status', 'name'],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='object',
            index=models.Index(fields=['owner', 'management_group', 'maintenance_group'], name='inventory_o_owner_i_653cc5_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['owner', 'management_group', 'maintenance_group'], name='inventory_l_owner_i_3fe214_idx'),
        ),
    ]
